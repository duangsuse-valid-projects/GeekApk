import java.util.function.Consumer

static void aliMavenCentral(RepositoryHandler self)
    { self.maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' } }

static void forEachAspect(String aspects, Consumer block)
    { Arrays.asList(aspects.split(',')).stream().forEach(block) }

buildscript {
    ext {
        kotlinVersion = '1.2.71'
        springBootVersion = '2.1.2.RELEASE'
    }
    repositories { mavenCentral() }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion".toString()

        ['gradle-plugin', 'allopen', 'noarg'].forEach
            { classpath "org.jetbrains.kotlin:kotlin-${it}:${kotlinVersion}".toString() }
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'org.duangsuse'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories { aliMavenCentral(it) }

dependencies {
    def starters = 'actuator,data-jpa,web'
    forEachAspect(starters)
        { implementation "org.springframework.boot:spring-boot-starter-$it" }

    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"

    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}
